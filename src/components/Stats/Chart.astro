<ul
  role="list"
  class="flex min-w-min max-w-max flex-wrap items-center justify-center px-8 pb-6 md:pt-2"
>
  <li
    class="col-span-1 m-8 flex flex-col divide-y divide-gray-200 rounded-lg text-center shadow dark:bg-white"
  >
    <div
      id="dev_chart"
      class="flex flex-col rounded-t-lg p-8 text-gray-900 dark:bg-gray-100 dark:text-gray-900"
    >
    </div>
  </li>
  <li
    class="col-span-1 m-8 flex flex-col divide-y divide-gray-200 rounded-lg text-center shadow dark:bg-white"
  >
    <div
      id="token_chart"
      class="flex flex-col rounded-t-lg p-8 text-gray-900 dark:bg-gray-100 dark:text-gray-900"
    >
    </div>
  </li>
</ul>

<script>
  const margin = { top: 10, right: 30, bottom: 30, left: 60 }
  const width = 600 - margin.left - margin.right
  const height = 400 - margin.top - margin.bottom
  let axisX, axisY

  const svg = d3
    .select('#dev_chart')
    .append('svg')
    .attr('width', width + margin.left + margin.right)
    .attr('height', height + margin.top + margin.bottom)
    .append('g')
    .attr('transform', `translate(${margin.left},${margin.top})`)

  const addLine = (data, needsAxis, color) => {
    // format data
    _data = []
    data.forEach((d) => {
      _data.push({
        date: new Date(Number(d.timestamp) * 1000),
        value: d.amount,
      })
    })

    // axis
    if (needsAxis) {
      axisX = d3
        .scaleTime()
        .domain(
          d3.extent(_data, function (d) {
            return d.date
          })
        )
        .range([0, width])
      svg
        .append('g')
        .attr('transform', `translate(0, ${height})`)
        .call(d3.axisBottom(axisX))

      axisY = d3
        .scaleLinear()
        .domain([
          0,
          d3.max(_data, function (d) {
            return +d.value
          }),
        ])
        .range([height, 0])
      svg.append('g').call(d3.axisLeft(axisY))
    }

    // line
    svg
      .append('path')
      .datum(_data)
      .attr('fill', 'none')
      .attr('stroke', color)
      .attr('stroke-width', 1.5)
      .attr(
        'd',
        d3
          .line()
          .x(function (d) {
            return axisX(d.date)
          })
          .y(function (d) {
            return axisY(d.value)
          })
      )
  }

  d3.json('./src/data/mainnet.json').then(function (data) {
    addLine(data, true, 'blue')
    d3.json('./src/data/arbitrum.json').then(function (data) {
      addLine(data, false, 'red')
      d3.json('./src/data/polygon.json').then(function (data) {
        addLine(data, false, 'green')
      })
    })
  })

  // append the svg object to the body of the page
  const tokenSvg = d3
    .select('#token_chart')
    .append('svg')
    .attr('width', width + margin.left + margin.right)
    .attr('height', height + margin.top + margin.bottom)
    .append('g')
    .attr('transform', `translate(${margin.left},${margin.top})`)
</script>
